{"version":3,"sources":["webpack:///./src/views/map/Openlayer.vue","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./src/views/map/Openlayer.vue?1cad","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/views/map/Openlayer.vue?76af"],"names":["id","Disposable","this","disposed","prototype","dispose","disposeInternal","numberSafeCompareFunction","a","b","linearFindNearest","arr","target","direction","n","length","i","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","call","arguments","apply","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","create","_super","AssertionError","code","_this","path","split","message","name","assert","assertion","errorCode","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","source","det","determinant","c","e","f","mat","join","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","min","minY","maxX","max","maxY","createOrUpdate","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","returnOrUpdate","scaleFromCenter","value","deltaX","deltaY","intersectsSegment","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","width","height","push","l","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","solveLinearSystem","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","m","toRadians","angleInDegrees","PI","modulo","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","MAX_CACHE_SIZE","cache","cacheSize","fromStringInternal_","s","g","exec","hasAlpha","parseInt","substr","indexOf","map","Number","normalize","undefined","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","get","src","crossOrigin","getKey","set","setSize","maxCacheSize","colorString","shared","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","PROPERTYCHANGE","assign","var_sources","TypeError","output","object","property","getValues","values","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","keys","splice","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","opt_this","opt_once","bind","originalListener_1","eventsKey","listenOnce","unlistenByKey","Observable","revision_","changed","EventType","getRevision","on","len","once","ol_key","un","unByKey","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","getChangeEventType","ObjectEventType","opt_silent","applyProperties","unset","changeEventTypeCache","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","Base","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","UNDEFINED","LOADING","READY","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","renderEvent","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","add","delta","coordinate1","coordinate2","cosAngle","sinAngle","scale","projection","canWrapX","worldWidth","worldsAway","getWorldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","callback_1","order","forEach","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","checkedFonts","labelCache","console","warn","measureFont","measureContext","textHeights","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","div","measureText","rotateAtOffset","offsetX","offsetY","translate","rotate","createTransformStringCanvas","createTransformString","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","container","getViewport","firstChild","children_","renderedVisible_","event_1","declutterLayers","previousElement","layerIndex","element","renderDeclutter","display","getDataAtPixel","Composite","ADD","REMOVE","LENGTH","CollectionEvent","opt_element","opt_index","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","opt_except","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","enumerable","configurable","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","MOVESTART","MOVEEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADED","EMPTY","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","hifi","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","sqrt","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","replace","transforms","destination","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","createSnapToPower","power","opt_minResolution","tolerance","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","newResolution","pow","createMinMaxResolution","disable","createSnapToN","theta","createSnapToZero","opt_tolerance","easeIn","easeOut","inAndOut","linear","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","anchor","anchorX","anchorY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","opt_sy","opt_anchor","simplify","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","twiceArea","LinearRing","maxDelta_","maxDeltaRevision_","GeometryType","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverse","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","ViewProperty","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","hasArea","toSize","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","interactions","overlays_","overlays","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","overlay","getId","toString","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getElementById","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","cont","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","view","updateViewportSize_","layerGroup","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","moveStart","MapEventType","idle","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","offsetHeight","Control","target_","listenerKeys","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","Pointer","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getAngle","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","mapExtent","boxPixelExtent","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","TRACKPAD","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","BaseTile","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","ImageState","renderIfReadyAndVisible","loadImage","imageState","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","newCanvas","newContext","clearRect","drawImage","getImageData","err","Uint8Array","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","setState","getInterimTile","viewResolution","viewCenter","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getContextOptions","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","restore","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","tileAlpha","alpha","alphaChanged","globalAlpha","endTransition","getImage","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","getTileCoord","ImageBase","getPixelRatio","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","loadHandler","errorHandler","img","promise","listening_1","unlisten","then","catch","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","brokenDiagonalRendering_","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","setup","mapId","init","Promise","resolve","spatialReference","__scopeId","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","proto","forced","callbackfn"],"mappings":"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","file":"js/chunk-7cafafcb.f06f8a9b.js","sourcesContent":["<template>\r\n    <div id=\"map\">\r\n    </div>\r\n</template>\r\n<script>\r\n    import {defineComponent, reactive, onMounted} from 'vue';\r\n    import 'ol/ol.css';\r\n    import {Map, View} from 'ol';\r\n    import TileLayer from 'ol/layer/Tile';\r\n    import XYZ from 'ol/source/XYZ'\r\n    import {transform} from \"ol/proj\"\r\n\r\n    export default defineComponent({\r\n        name: \"Openlayer\",\r\n        setup() {\r\n            let data = reactive({\r\n                map: null,\r\n                mapId: '',\r\n                zoom: 10,\r\n                view: null,\r\n                point: [117.0259090203891, 36.53735004794639]\r\n            })\r\n            let init = () => {\r\n                return new Promise((resolve) => {\r\n                    data.map = new Map({\r\n                        target: 'map',\r\n                        layers: [\r\n                            new TileLayer({\r\n                                source: new XYZ({\r\n                                    crossOrigin: 'anonymous',\r\n                                    url: 'http://webrd0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',\r\n                                }),\r\n                                spatialReference: {\r\n                                    projection: 'EPSG:3857'\r\n                                },\r\n                                className: 'dt ol-layer',\r\n                                zIndex: 2,\r\n                            })\r\n                        ],\r\n                        view: new View({\r\n                            center: transform(data.point, 'EPSG:4326', 'EPSG:3857'),\r\n                            zoom: 7.7,\r\n                            maxZoom: 18,\r\n                            minZoom: 1,\r\n                        })\r\n                    });\r\n                    resolve('成功');\r\n                })\r\n            }\r\n            onMounted(() => {\r\n                init();\r\n            })\r\n            return {\r\n                data,\r\n                init\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n    #map {\r\n        height: 100%;\r\n    }\r\n</style>\r\n\r\n","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","import { render } from \"./Openlayer.vue?vue&type=template&id=3f30ae22&scoped=true\"\nimport script from \"./Openlayer.vue?vue&type=script&lang=js\"\nexport * from \"./Openlayer.vue?vue&type=script&lang=js\"\n\nimport \"./Openlayer.vue?vue&type=style&index=0&id=3f30ae22&scoped=true&lang=less\"\nscript.render = render\nscript.__scopeId = \"data-v-3f30ae22\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Openlayer.vue?vue&type=style&index=0&id=3f30ae22&scoped=true&lang=less\""],"sourceRoot":""}